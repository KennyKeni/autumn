"""Add system prompt at partition level

Revision ID: 84fd3de2c959
Revises: 6d9669e77e5a
Create Date: 2025-08-02 21:13:26.498282

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '84fd3de2c959'
down_revision: Union[str, Sequence[str], None] = '6d9669e77e5a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('data_indexstore:idx_key_namespace'), table_name='data_indexstore')
    op.drop_table('data_indexstore')
    op.drop_index(op.f('data_docstore:idx_key_namespace'), table_name='data_docstore')
    op.drop_table('data_docstore')
    op.add_column('partitions', sa.Column('systemPrompt', sa.Text(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('partitions', 'systemPrompt')
    op.create_table('data_docstore',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('key', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('namespace', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('value', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('data_docstore_pkey')),
    sa.UniqueConstraint('key', 'namespace', name=op.f('data_docstore:unique_key_namespace'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index(op.f('data_docstore:idx_key_namespace'), 'data_docstore', ['key', 'namespace'], unique=False)
    op.create_table('data_indexstore',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('key', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('namespace', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('value', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('data_indexstore_pkey')),
    sa.UniqueConstraint('key', 'namespace', name=op.f('data_indexstore:unique_key_namespace'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index(op.f('data_indexstore:idx_key_namespace'), 'data_indexstore', ['key', 'namespace'], unique=False)
    # ### end Alembic commands ###
