"""Initial migration

Revision ID: 6d9669e77e5a
Revises: 
Create Date: 2025-07-23 23:24:29.651327

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '6d9669e77e5a'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('collections',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('embedding_model', sa.String(), nullable=False),
    sa.Column('vector_dimension', sa.Integer(), nullable=False),
    sa.Column('vector_distance', sa.String(length=128), nullable=False),
    sa.Column('vector_on_disk', sa.Boolean(), nullable=False),
    sa.Column('shard_number', sa.Integer(), nullable=False),
    sa.Column('replication_factor', sa.Integer(), nullable=False),
    sa.Column('hnsw_m', sa.Integer(), nullable=False),
    sa.Column('hnsw_payload_m', sa.Integer(), nullable=False),
    sa.Column('hnsw_on_disk', sa.Boolean(), nullable=False),
    sa.Column('status', sa.String(length=64), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_collections'))
    )
    op.create_table('files',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=256), nullable=False),
    sa.Column('mime_type', sa.String(length=32), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('bucket_name', sa.String(length=256), nullable=False),
    sa.Column('object_key', sa.String(length=256), nullable=False),
    sa.Column('status', sa.String(length=256), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_files'))
    )
    op.create_index(op.f('idx_files_files_bucket_name'), 'files', ['bucket_name'], unique=False)
    op.create_index(op.f('idx_files_files_object_key'), 'files', ['object_key'], unique=False)
    op.create_index(op.f('idx_files_files_status'), 'files', ['status'], unique=False)
    op.create_table('partitions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=256), nullable=False),
    sa.Column('description', sa.String(length=1024), nullable=True),
    sa.Column('collection_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.String(length=128), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['collection_id'], ['collections.id'], name=op.f('fk_partitions_collection_id')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_partitions'))
    )
    op.create_index(op.f('idx_partitions_partitions_collection_id'), 'partitions', ['collection_id'], unique=False)
    op.create_table('partition_files',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('partition_id', sa.UUID(), nullable=False),
    sa.Column('file_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['file_id'], ['files.id'], name=op.f('fk_partition_files_file_id')),
    sa.ForeignKeyConstraint(['partition_id'], ['partitions.id'], name=op.f('fk_partition_files_partition_id')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_partition_files')),
    sa.UniqueConstraint('partition_id', 'file_id', name=op.f('uq_partition_files_partition_id'))
    )
    op.create_index(op.f('idx_partition_files_partition_files_file_id'), 'partition_files', ['file_id'], unique=False)
    op.create_index(op.f('idx_partition_files_partition_files_partition_id'), 'partition_files', ['partition_id'], unique=False)
    op.create_table('partition_file_tools',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tool_group', sa.String(length=128), nullable=False),
    sa.Column('tool_type', sa.String(length=128), nullable=False),
    sa.Column('partition_file_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['partition_file_id'], ['partition_files.id'], name=op.f('fk_partition_file_tools_partition_file_id')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_partition_file_tools'))
    )
    op.create_index(op.f('idx_partition_file_tools_partition_file_tools_partition_file_id'), 'partition_file_tools', ['partition_file_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('idx_partition_file_tools_partition_file_tools_partition_file_id'), table_name='partition_file_tools')
    op.drop_table('partition_file_tools')
    op.drop_index(op.f('idx_partition_files_partition_files_partition_id'), table_name='partition_files')
    op.drop_index(op.f('idx_partition_files_partition_files_file_id'), table_name='partition_files')
    op.drop_table('partition_files')
    op.drop_index(op.f('idx_partitions_partitions_collection_id'), table_name='partitions')
    op.drop_table('partitions')
    op.drop_index(op.f('idx_files_files_status'), table_name='files')
    op.drop_index(op.f('idx_files_files_object_key'), table_name='files')
    op.drop_index(op.f('idx_files_files_bucket_name'), table_name='files')
    op.drop_table('files')
    op.drop_table('collections')
    # ### end Alembic commands ###
